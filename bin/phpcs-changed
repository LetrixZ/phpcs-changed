#!/usr/bin/env php
<?php
// Make sure this script is being run over the PHP CLI!
if ('cli' !== php_sapi_name()) {
	return;
}

require_once __DIR__ . '/../index.php';

use function PhpcsDiff\getNewPhpcsMessages;
use PhpcsDiff\PhpcsMessages;

function getDebug($debugEnabled) {
	return function(...$outputs) use ($debugEnabled) {
		if (! $debugEnabled) {
			return;
		}
		foreach ($outputs as $output) {
			fwrite(STDERR, (is_string($output) ? $output : var_export($output, true)) . PHP_EOL);
		}
	};
}

function printHelp() {
	echo <<<EOF
Runs phpcs on changed sections of files!

This can be run in two modes: manual or automatic.

Manual mode requires these three arguments:

--diff <FILE>  A file containing a unified diff of the changes.
--phpcs-orig <FILE>  A file containing the JSON output of phpcs on the unchanged file.
--phpcs-new <FILE>  A file containing the JSON output of phpcs on the changed file.

Automatic mode will gather data itself if you specify the version control system:

--svn <FILE>  This is the file to check.

All modes support the following options:

--standard <STANDARD>  The phpcs standard to use.
--debug  Enable debug output.
EOF;
	die(0);
}

function runManualMode($diffFile, $phpcsOldFile, $phpcsNewFile) {
	$unifiedDiff = file_get_contents($diffFile);
	$oldFilePhpcsOutput = file_get_contents($phpcsOldFile);
	$newFilePhpcsOutput = file_get_contents($phpcsNewFile);
	if (! $unifiedDiff || ! $oldFilePhpcsOutput || ! $newFilePhpcsOutput) {
		fwrite(STDERR, 'Cannot read input files.' . PHP_EOL);
		die(1);
	}
	printMessagesAndExit(getNewPhpcsMessages($unifiedDiff, PhpcsMessages::fromPhpcsJson($oldFilePhpcsOutput), PhpcsMessages::fromPhpcsJson($newFilePhpcsOutput)));
}

function printMessagesAndExit(PhpcsMessages $messages) {
	if (count($messages->getMessages()) < 1) {
		die(0);
	}
	echo $messages->toPhpcsJson() . PHP_EOL;
	die(1);
}

$options = getopt(
	'h',
	[
		'help',
		'diff:',
		'phpcs-orig:',
		'phpcs-new:',
		'svn:',
		'standard:',
		'debug',
	]
);

if (isset($options['h']) || isset($options['help'])) {
	printHelp();
}

$debug = getDebug(isset($options['debug']));
$debug('Running...');

$diffFile = $options['diff'] ?? null;
$phpcsOldFile = $options['phpcs-orig'] ?? null;
$phpcsNewFile = $options['phpcs-new'] ?? null;

if ($diffFile && $phpcsOldFile && $phpcsNewFile) {
	runManualMode($diffFile, $phpcsOldFile, $phpcsNewFile);
}

$svnFile = $options['svn'] ?? null;
if ($svnFile) {
	$svn = 'svn';
	$phpcs = 'phpcs';
	$phpcsStandard = $options['standard'] ?? null;
	$phpcsStandardOption = $phpcsStandard ? ' --standard=' . escapeshellarg($phpcsStandard) : '';
	if (! is_readable($svnFile)) {
		fwrite(STDERR, "Cannot read file '{$svnFile}'" . PHP_EOL);
		die(1);
	}
	$unifiedDiffCommand = "{$svn} diff " . escapeshellarg($svnFile);
	$debug($unifiedDiffCommand);
	$unifiedDiff = shell_exec($unifiedDiffCommand);
	if (! $unifiedDiff) {
		fwrite(STDERR, "Cannot get svn diff for file '{$svnFile}'" . PHP_EOL);
		die(1);
	}
	debug($unifiedDiff);
	$oldFilePhpcsOutputCommand = "${svn} cat " . escapeshellarg($svnFile) . " | {$phpcs} --report=json" . $phpcsStandardOption;
	$debug($oldFilePhpcsOutputCommand);
	$oldFilePhpcsOutput = shell_exec($oldFilePhpcsOutputCommand);
	if (! $oldFilePhpcsOutput) {
		fwrite(STDERR, "Cannot get old phpcs output for file '{$svnFile}'" . PHP_EOL);
		die(1);
	}
	debug($oldFilePhpcsOutput);
	$newFilePhpcsOutputCommand = "cat " . escapeshellarg($svnFile) . " | {$phpcs} --report=json" . $phpcsStandardOption;
	$debug($newFilePhpcsOutputCommand);
	$newFilePhpcsOutput = shell_exec($newFilePhpcsOutputCommand);
	if (! $newFilePhpcsOutput) {
		fwrite(STDERR, "Cannot get new phpcs output for file '{$svnFile}'" . PHP_EOL);
		die(1);
	}
	debug($newFilePhpcsOutput);
	printMessagesAndExit(getNewPhpcsMessages($unifiedDiff, PhpcsMessages::fromPhpcsJson($oldFilePhpcsOutput), PhpcsMessages::fromPhpcsJson($newFilePhpcsOutput)));
}

printHelp();
